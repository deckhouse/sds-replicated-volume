Subject: [PATCH] changes in logs
---
Index: go.mod
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/go.mod b/go.mod
--- a/go.mod	(revision f865301d42c607292ee08695a836c2b5fc3187ce)
+++ b/go.mod	(revision d10d6a7b9ddd6e0f6166fac7b068ecce6bc45f6f)
@@ -4,12 +4,14 @@

 require (
 	github.com/LINBIT/golinstor v0.52.1
-	github.com/sirupsen/logrus v1.9.3
+	k8s.io/klog/v2 v2.130.1
 )

 require (
 	github.com/donovanhide/eventsource v0.0.0-20210830082556-c59027999da0 // indirect
+	github.com/go-logr/logr v1.4.1 // indirect
 	github.com/google/go-querystring v1.1.0 // indirect
+	github.com/sirupsen/logrus v1.9.3 // indirect
 	golang.org/x/sys v0.21.0 // indirect
 	golang.org/x/time v0.5.0 // indirect
 	moul.io/http2curl/v2 v2.3.0 // indirect
Index: go.sum
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/go.sum b/go.sum
--- a/go.sum	(revision f865301d42c607292ee08695a836c2b5fc3187ce)
+++ b/go.sum	(revision d10d6a7b9ddd6e0f6166fac7b068ecce6bc45f6f)
@@ -5,6 +5,8 @@
 github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
 github.com/donovanhide/eventsource v0.0.0-20210830082556-c59027999da0 h1:C7t6eeMaEQVy6e8CarIhscYQlNmw5e3G36y7l7Y21Ao=
 github.com/donovanhide/eventsource v0.0.0-20210830082556-c59027999da0/go.mod h1:56wL82FO0bfMU5RvfXoIwSOP2ggqqxT+tAfNEIyxuHw=
+github.com/go-logr/logr v1.4.1 h1:pKouT5E8xu9zeFC39JXRDukb6JFQPXM5p5I91188VAQ=
+github.com/go-logr/logr v1.4.1/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=
 github.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
 github.com/google/go-cmp v0.5.9 h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=
 github.com/google/go-querystring v1.1.0 h1:AnCroh3fv4ZBgVIf1Iwtovgjaw/GiKJo8M8yD/fhyJ8=
@@ -52,5 +54,7 @@
 gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
 gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
 gopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=
+k8s.io/klog/v2 v2.130.1 h1:n9Xl7H1Xvksem4KFG4PYbdQCQxqc/tTUyrgXaOhHSzk=
+k8s.io/klog/v2 v2.130.1/go.mod h1:3Jpz1GvMt720eyJH1ckRHK1EDfpxISzJ7I9OYgaDtPE=
 moul.io/http2curl/v2 v2.3.0 h1:9r3JfDzWPcbIklMOs2TnIFzDYvfAZvjeavG6EzP7jYs=
 moul.io/http2curl/v2 v2.3.0/go.mod h1:RW4hyBjTWSYDOxapodpNEtX0g5Eb16sxklBqmd2RHcE=
Index: main.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.go b/main.go
--- a/main.go	(revision f865301d42c607292ee08695a836c2b5fc3187ce)
+++ b/main.go	(revision d10d6a7b9ddd6e0f6166fac7b068ecce6bc45f6f)
@@ -8,7 +8,7 @@
 	"time"

 	"github.com/LINBIT/golinstor/client"
-	"github.com/sirupsen/logrus"
+	klog "k8s.io/klog/v2"
 )

 var (
@@ -21,10 +21,8 @@
 	ctx, cancel := signal.NotifyContext(context.Background(), os.Interrupt)
 	defer cancel()

-	log := logrus.WithField("version", Version)
-
 	if len(os.Args) < 2 {
-		log.Fatal("expected at least 1 argument")
+		klog.Fatal("expected at least 1 argument")
 	}

 	var err error
@@ -35,16 +33,16 @@
 	case "satellite-online":
 		waitCheck, err = waitSatelliteOnline(os.Args[2:]...)
 	default:
-		log.Fatalf("unknown argument %s", os.Args[1])
+		klog.Fatalf("unknown argument %s", os.Args[1])
 	}

 	if err != nil {
-		log.WithError(err).Fatal("error parsing arguments")
+		klog.Fatalf("error parsing arguments")
 	}

-	lc, err := client.NewClient(client.Log(log))
+	lc, err := client.NewClient()
 	if err != nil {
-		log.WithError(err).Fatal("failed to create LINSTOR client")
+		klog.Fatalf("failed to create LINSTOR client")
 	}

 	for {
@@ -54,10 +52,10 @@
 		}

 		if ctx.Err() != nil {
-			log.WithError(err).Fatal("context cancelled")
+			klog.Fatalf("context cancelled")
 		}

-		log.WithError(err).Info("not ready")
+		klog.Infof("not ready")
 
 		time.Sleep(10 * time.Second)
 	}
