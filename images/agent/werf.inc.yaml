---
# do not remove this image: used in external audits (DKP CSE)
image: {{ .ImageName }}-src-artifact
fromImage: builder/src
final: false
git:
  - add: /
    to: /src
    includePaths:
      - api
      - lib/go
      - images/{{ $.ImageName }}
    stageDependencies:
      install:
        - '**/*'
    excludePaths:
      - images/{{ $.ImageName }}/werf.yaml
shell:
  install:
    - git clone --depth 1 --branch v{{ $.Versions.DRBD_UTILS }} {{ $.Root.SOURCE_REPO }}/LINBIT/drbd-utils /src/drbd-utils
    - cd /src/drbd-utils
    - git submodule update --init --recursive
    #- rm -rf /src/drbd-utils/.git # needed for make

---
{{- $drbdBinaries := "/drbd-utils/sbin/* /drbd-utils/etc/drbd.conf /drbd-utils/etc/drbd.d/global_common.conf /drbd-utils/etc/multipath/conf.d/drbd.conf" }}
image: {{ .ImageName }}-binaries-artifact
fromImage: builder/alt
final: false
import:
  - image: {{ .ImageName }}-src-artifact
    add: /src
    to: /src
    includePaths:
      - drbd-utils
    before: install
git:
  - add: /tools/dev_images/additional_tools/alt/binary_replace.sh
    to: /binary_replace.sh
    stageDependencies:
      beforeSetup:
        - '**/*'
shell:
  beforeInstall:
    - apt-get update
    - apt-get install -y make automake pkg-config gcc libtool git curl rsync
    - apt-get install -y flex libkeyutils-devel udev
    - {{ $.Root.ALT_CLEANUP_CMD }}
  install:
    - cd /src/drbd-utils
    - ./autogen.sh
    - ./configure --prefix=/ --sysconfdir=/etc --localstatedir=/var --without-manual
    - make
    - make install DESTDIR=/drbd-utils
    - sed -i 's/usage-count\s*yes;/usage-count no;/' /drbd-utils/etc/drbd.d/global_common.conf
  beforeSetup:
    - chmod +x /binary_replace.sh
    - /binary_replace.sh -i "{{ $drbdBinaries }}" -o /relocate
  setup:
    - rsync -avz /relocate/drbd-utils/ /relocate/
    - rm -rf /relocate/drbd-utils/
    - echo 'include "/var/lib/sds-replicated-volume-agent.d/*.res";' > /relocate/etc/drbd.d/sds-replicated-volume-agent.res

---
image: {{ .ImageName }}-golang-artifact
fromImage: builder/golang-alpine
final: false
import:
  - image: {{ .ImageName }}-src-artifact
    add: /src
    to: /src
    excludePaths:
      - drbd-utils
    before: setup
mount:
  - fromPath: ~/go-pkg-cache
    to: /go/pkg
shell:
  setup:
    - cd /src/images/{{ $.ImageName }}/cmd
    - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags="-s -w" -tags {{ $.Root.MODULE_EDITION }} -o /{{ $.ImageName }}
    - chmod +x /{{ $.ImageName }}

---
image: {{ .ImageName }}
fromImage: builder/src
import:
  - image: {{ $.ImageName }}-binaries-artifact
    add: /relocate
    to: /
    before: setup
  - image: {{ $.ImageName }}-golang-artifact
    add: /{{ $.ImageName }}
    to: /{{ $.ImageName }}
    before: setup
imageSpec:
  config:
    entrypoint: ["/{{ $.ImageName }}"]
