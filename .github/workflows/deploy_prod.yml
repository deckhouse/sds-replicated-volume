name: Deploy Prod

env:
  MODULES_REGISTRY: ${{ vars.PROD_REGISTRY }}
  MODULE_SOURCE_NAME: ${{ vars.PROD_MODULE_SOURCE_NAME }}
  CI_COMMIT_REF_NAME: ${{ github.ref_name }}
  MODULES_MODULE_NAME: ${{ vars.MODULE_NAME }}
  RELEASE_CHANNEL: ${{ github.event.inputs.channel }}
  MODULES_REGISTRY_LOGIN: ${{ vars.PROD_MODULES_REGISTRY_LOGIN }}
  MODULES_REGISTRY_PASSWORD: ${{ secrets.PROD_MODULES_REGISTRY_PASSWORD }}
  MODULES_READ_REGISTRY_PASSWORD: ${{ secrets.PROD_MODULES_READ_REGISTRY_PASSWORD }}
  MODULES_MODULE_TAG: ${{ github.event.inputs.tag }}

on:
  workflow_dispatch:
    inputs:
      channel:
        description: "Select release channel"
        type: choice
        default: alpha
        options:
          - "alpha"
          - "beta"
          - "early-access"
          - "stable"
          - "rock-solid"

      ce:
        type: boolean
        description: CE
      ee:
        type: boolean
        description: EE
      fe:
        type: boolean
        description: FE
      se:
        type: boolean
        description: SE
      se-plus:
        type: boolean
        description: SE+

      tag:
        description: "Tag of the module, example v1.21.1"
        type: string
        required: true

jobs:
  print-vars:
    runs-on: [self-hosted, large]
    name: Print vars
    steps:
      - name: PRINT VARS
        run: |
          echo $MODULES_REGISTRY
          echo $MODULE_SOURCE_NAME
          echo $CI_COMMIT_REF_NAME
          echo $MODULES_MODULE_NAME
          echo $RELEASE_CHANNEL
          echo $MODULES_MODULE_TAG
        shell: bash

  job-CE:
    name: Edition CE
    runs-on: [self-hosted, large]
    if: github.event.inputs.ce == 'true'
    steps:
      - run: echo "CE"
      - name: SET VAR
        run: |
          echo "MODULES_MODULE_SOURCE=$MODULES_REGISTRY/$MODULE_SOURCE_NAME/ce/modules" >> "$GITHUB_ENV"
      - name: ECHO VAR
        run: |
          echo $MODULES_MODULE_SOURCE
      - uses: actions/checkout@v4
      - uses: deckhouse/modules-actions/setup@v2
        with:
          registry: ${{ vars.PROD_REGISTRY }}
          registry_login: ${{ vars.PROD_MODULES_REGISTRY_LOGIN }}
          registry_password: ${{ secrets.PROD_MODULES_REGISTRY_PASSWORD }}
      - name: Check previous release
        run: |
          chmod +x .github/check_previous_channel_release.sh
          .github/check_previous_channel_release.sh $MODULES_MODULE_NAME ce $RELEASE_CHANNEL $MODULES_MODULE_TAG license-token $MODULES_READ_REGISTRY_PASSWORD
      - uses: deckhouse/modules-actions/deploy@v2
        with:
          module_source: "${{ vars.PROD_REGISTRY }}/${{ vars.PROD_MODULE_SOURCE_NAME }}/ce/modules"
          module_name: ${{ vars.MODULE_NAME }}
          module_tag: ${{ github.event.inputs.tag }}
          release_channel: ${{ github.event.inputs.channel }}

  job-EE:
    name: Edition EE
    runs-on: [self-hosted, large]
    if: github.event.inputs.ee == 'true'
    steps:
      - run: echo "EE"
      - name: SET VAR
        run: |
          echo "MODULES_MODULE_SOURCE=$MODULES_REGISTRY/$MODULE_SOURCE_NAME/ee/modules" >> "$GITHUB_ENV"
      - name: ECHO VAR
        run: |
          echo $MODULES_MODULE_SOURCE
      - uses: actions/checkout@v4
      - uses: deckhouse/modules-actions/setup@v2
        with:
          registry: ${{ vars.PROD_REGISTRY }}
          registry_login: ${{ vars.PROD_MODULES_REGISTRY_LOGIN }}
          registry_password: ${{ secrets.PROD_MODULES_REGISTRY_PASSWORD }}
      - name: Check previous release
        run: |
          chmod +x .github/check_previous_channel_release.sh
          .github/check_previous_channel_release.sh $MODULES_MODULE_NAME ee $RELEASE_CHANNEL $MODULES_MODULE_TAG license-token $MODULES_READ_REGISTRY_PASSWORD
      - uses: deckhouse/modules-actions/deploy@v2
        with:
          module_source: "${{ vars.PROD_REGISTRY }}/${{ vars.PROD_MODULE_SOURCE_NAME }}/ee/modules"
          module_name: ${{ vars.MODULE_NAME }}
          module_tag: ${{ github.event.inputs.tag }}
          release_channel: ${{ github.event.inputs.channel }}

  job-FE:
    name: Edition FE
    runs-on: [self-hosted, large]
    if: github.event.inputs.fe == 'true'
    steps:
      - run: echo "FE"
      - name: SET VAR
        run: |
          echo "MODULES_MODULE_SOURCE=$MODULES_REGISTRY/$MODULE_SOURCE_NAME/fe/modules" >> "$GITHUB_ENV"
      - name: ECHO VAR
        run: |
          echo $MODULES_MODULE_SOURCE
      - uses: actions/checkout@v4
      - uses: deckhouse/modules-actions/setup@v2
        with:
          registry: ${{ vars.PROD_REGISTRY }}
          registry_login: ${{ vars.PROD_MODULES_REGISTRY_LOGIN }}
          registry_password: ${{ secrets.PROD_MODULES_REGISTRY_PASSWORD }}
      - name: Check previous release
        run: |
          chmod +x .github/check_previous_channel_release.sh
          .github/check_previous_channel_release.sh $MODULES_MODULE_NAME fe $RELEASE_CHANNEL $MODULES_MODULE_TAG license-token $MODULES_READ_REGISTRY_PASSWORD
      - uses: deckhouse/modules-actions/deploy@v2
        with:
          module_source: "${{ vars.PROD_REGISTRY }}/${{ vars.PROD_MODULE_SOURCE_NAME }}/fe/modules"
          module_name: ${{ vars.MODULE_NAME }}
          module_tag: ${{ github.event.inputs.tag }}
          release_channel: ${{ github.event.inputs.channel }}

  job-SE:
    name: Edition SE
    runs-on: [self-hosted, large]
    if: github.event.inputs.se == 'true'
    steps:
      - run: echo "SE"
      - name: SET VAR
        run: |
          echo "MODULES_MODULE_SOURCE=$MODULES_REGISTRY/$MODULE_SOURCE_NAME/se/modules" >> "$GITHUB_ENV"
      - name: ECHO VAR
        run: |
          echo $MODULES_MODULE_SOURCE
      - uses: actions/checkout@v4
      - uses: deckhouse/modules-actions/setup@v2
        with:
          registry: ${{ vars.PROD_REGISTRY }}
          registry_login: ${{ vars.PROD_MODULES_REGISTRY_LOGIN }}
          registry_password: ${{ secrets.PROD_MODULES_REGISTRY_PASSWORD }}
      - name: Check previous release
        run: |
          chmod +x .github/check_previous_channel_release.sh
          .github/check_previous_channel_release.sh $MODULES_MODULE_NAME se $RELEASE_CHANNEL $MODULES_MODULE_TAG license-token $MODULES_READ_REGISTRY_PASSWORD
      - uses: deckhouse/modules-actions/deploy@v2
        with:
          module_source: "${{ vars.PROD_REGISTRY }}/${{ vars.PROD_MODULE_SOURCE_NAME }}/se/modules"
          module_name: ${{ vars.MODULE_NAME }}
          module_tag: ${{ github.event.inputs.tag }}
          release_channel: ${{ github.event.inputs.channel }}

  job-SE-plus:
    name: Edition SE+
    runs-on: [self-hosted, large]
    if: github.event.inputs.se-plus == 'true'
    steps:
      - run: echo "SE+"
      - name: SET VAR
        run: |
          echo "MODULES_MODULE_SOURCE=$MODULES_REGISTRY/$MODULE_SOURCE_NAME/se-plus/modules" >> "$GITHUB_ENV"
      - name: ECHO VAR
        run: |
          echo $MODULES_MODULE_SOURCE
      - uses: actions/checkout@v4
      - uses: deckhouse/modules-actions/setup@v2
        with:
          registry: ${{ vars.PROD_REGISTRY }}
          registry_login: ${{ vars.PROD_MODULES_REGISTRY_LOGIN }}
          registry_password: ${{ secrets.PROD_MODULES_REGISTRY_PASSWORD }}
      - name: Check previous release
        run: |
          chmod +x .github/check_previous_channel_release.sh
          .github/check_previous_channel_release.sh $MODULES_MODULE_NAME se-plus $RELEASE_CHANNEL $MODULES_MODULE_TAG license-token $MODULES_READ_REGISTRY_PASSWORD
      - uses: deckhouse/modules-actions/deploy@v2
        with:
          module_source: "${{ vars.PROD_REGISTRY }}/${{ vars.PROD_MODULE_SOURCE_NAME }}/se-plus/modules"
          module_name: ${{ vars.MODULE_NAME }}
          module_tag: ${{ github.event.inputs.tag }}
          release_channel: ${{ github.event.inputs.channel }}
