apiVersion: deckhouse.io/v1alpha1
kind: NodeGroupConfiguration
metadata:
  name: drbd-install-debian.sh
  {{- include "helm_lib_module_labels" (list .) | nindent 2 }}
spec:
  weight: 98
  nodeGroups: ["*"]
  bundles: ["ubuntu-lts", "debian", "astra"]
  content: |
    # Copyright 2023 Flant JSC
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.

    # data nodes checksum to force bashible execution on nodes list change
    # {{ $.Values.sdsReplicatedVolume.internal.dataNodesChecksum }}

    # Unpack package from module image and run install script
    # bb-rp-from-module-image-install package:digest registry_auth scheme registry_address registry_path
    bb-rp-from-module-image-install() {
      local MODULE_PACKAGE=$1
      local REGISTRY_AUTH=$2
      local SCHEME=$3
      local REGISTRY_ADDRESS=$4
      local REGISTRY_PATH=$5

      bb-rp-install $MODULE_PACKAGE
    }

    kubeconfig="/etc/kubernetes/kubelet.conf"

    kernel_version_in_use="$(uname -r)"

    CLUSTER_DNS="{{ .Values.global.discovery.clusterDNSAddress }}"
    SPAAS_FQDN="spaas.d8-{{ .Chart.Name }}.svc.{{ .Values.global.discovery.clusterDomain }}"

    MODULE_REGISTRY_AUTH="$(echo {{ .Values.sdsReplicatedVolume.registry.dockercfg }} | base64 -d | jq -r '.auths[].auth // ""' | base64 -d)"
    {{- if or (hasPrefix "dev" .Values.global.deckhouseVersion) (hasSuffix "dev" .Values.global.deckhouseVersion) (semverCompare ">=1.58" .Values.global.deckhouseVersion) }}
    MODULE_SCHEME="{{ .Values.sdsReplicatedVolume.registry.scheme }}"
    {{- else }}
    MODULE_SCHEME="{{ .Values.sdsReplicatedVolume.registryScheme }}"
    {{- end }}
    MODULE_REGISTRY_ADDRESS=$(echo {{ .Values.sdsReplicatedVolume.registry.base }} | cut -f 1 -d '/')
    MODULE_REGISTRY_PATH="/"$(echo {{ .Values.sdsReplicatedVolume.registry.base }} | cut -f 2- -d '/')"/sds-replicated-volume"
    MODULE_REPOSITORY="{{ .Values.sdsReplicatedVolume.registry.base }}"

    is_master=$(bb-kubectl --kubeconfig $kubeconfig  get node "$(hostname)" -o json | jq -c '.metadata.labels | contains({"node-role.kubernetes.io/control-plane": ""})')
    if [ $is_master == "true" ]; then
      {{- if or (hasPrefix "dev" .Values.global.deckhouseVersion) (hasSuffix "dev" .Values.global.deckhouseVersion) (semverCompare ">=1.63" .Values.global.deckhouseVersion) }}
      bb-package-module-install "serviceScripts:{{ .Values.global.modulesImages.digests.sdsReplicatedVolume.serviceScripts }}" "$MODULE_REPOSITORY" "sds-replicated-volume"
      {{- else }}
      bb-rp-from-module-image-install "serviceScripts:{{ .Values.global.modulesImages.digests.sdsReplicatedVolume.serviceScripts }}" "$MODULE_REGISTRY_AUTH" "$MODULE_SCHEME" "$MODULE_REGISTRY_ADDRESS" "$MODULE_REGISTRY_PATH"
      {{- end }}
    fi

    is_linstor_data_node=$(bb-kubectl --kubeconfig $kubeconfig  get node "$(hostname)" -o json | jq -c '.metadata.labels | contains({"storage.deckhouse.io/sds-replicated-volume-node":""})')

    bb-log-info "we need drbd on node: "$is_linstor_data_node

    # Usermode helper has been disabled according to vendor recommendations. More information can be found here:
    # https://github.com/LINBIT/drbd/commit/819285d065f1f81bad7b97e32a64017b5e15948d
    # https://github.com/LINBIT/linstor-server/issues/121
    # https://github.com/piraeusdatastore/piraeus-operator/issues/134
    bb-sync-file /etc/modprobe.d/drbd.conf - << "EOF"
    options drbd usermode_helper=disabled
    EOF

    if [ $is_linstor_data_node == "false" ]; then
      if [ -e "/proc/drbd" ]; then
        if [ -e "/etc/modules" ]; then
          sed -i 's/^drbd$//' /etc/modules
        fi
        rmmod drbd_transport_rdma || true
        rmmod drbd_transport_tcp || true
        rmmod drbd || true
      fi
      exit 0
    fi

    # DRBD requires the kernel sources to be installed.
    # Install actual kernel headers
    bb-apt-install "linux-headers-${kernel_version_in_use}"

    # Remove unused kernel-headers
    kernel_version_pattern="$(echo "$kernel_version_in_use" | sed -r 's/([0-9\.-]+)-([^0-9]+)$/^linux-headers-(\1|\1-\2)$/')"
    packages_to_remove="$(
      dpkg-query -S '/lib/modules/*/build' | awk -F: '{print $1}' | grep -Ev "$kernel_version_pattern" || true
    )"
    if [ -n "$packages_to_remove" ]; then
      bb-apt-remove $packages_to_remove
    fi

    if [ -e "/proc/drbd" ]; then
      # DRBD check version

      current_version="$(cat /proc/drbd | grep 'version:' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')"
      desired_version="{{ $.Values.sdsReplicatedVolume.internal.drbdVersion }}"

      # We expect the loaded DRBD module to be version 9.
      # If version 8 is loaded, it means that for some reason, the in-tree kernel module has been automatically loaded.
      # (For example, this can happen due to drbd-utils installed on the host, which should not occur in standard scenarios).
      # We are only interested in the version 9 loaded by our helper script, so unload module and wait until it done.
      if [[ ! $current_version =~ ^9.* ]]; then
        rmmod drbd_transport_rdma || true
        rmmod drbd_transport_tcp || true
        rmmod drbd || true
      fi

      {{- if or (hasPrefix "dev" .Values.global.deckhouseVersion) (hasSuffix "dev" .Values.global.deckhouseVersion) (semverCompare ">=1.63" .Values.global.deckhouseVersion) }}
      bb-package-module-install "semver:{{ .Values.global.modulesImages.digests.sdsReplicatedVolume.semver }}" "$MODULE_REPOSITORY" "sds-replicated-volume"
      {{- else }}
      bb-rp-from-module-image-install "semver:{{ .Values.global.modulesImages.digests.sdsReplicatedVolume.semver }}" "$MODULE_REGISTRY_AUTH" "$MODULE_SCHEME" "$MODULE_REGISTRY_ADDRESS" "$MODULE_REGISTRY_PATH"
      {{- end }}

      if [ "$(d8-semver compare $current_version $desired_version)" == "-1" ]; then
        bb-log-info "DRBD needs to be rebuilt"
      else
        if [ -e "/etc/modules" ]; then
          if grep -q -E '^drbd$' /etc/modules; then
            sed -i '/^drbd$/d' /etc/modules
          fi
        fi
        bb-sync-file /etc/modules-load.d/d8_drbd.conf - <<< "drbd"

        bb-log-info "Desired drbd version is already loaded, nothing to do"
        exit 0
      fi
    fi

    # Check, if we need gcc version 12
    gccVersion="$(cat /proc/version | grep -q x86_64-linux-gnu-gcc-12 && echo gcc-12 || echo gcc)"
    bb-apt-install make bind9-host patch mokutil $gccVersion
    check_sb_state="$(mokutil --sb-state || echo "Not supported")"
    if [[ "$check_sb_state" == "SecureBoot enabled" ]]; then
      bb-log-info "SecureBoot is enabled. Please manually install DRBD version  {{ $.Values.sdsReplicatedVolume.internal.drbdVersion }} or higher."
      exit 0
    fi

    {{- if or (hasPrefix "dev" .Values.global.deckhouseVersion) (hasSuffix "dev" .Values.global.deckhouseVersion) (semverCompare ">=1.63" .Values.global.deckhouseVersion) }}
    bb-package-module-install "drbd:{{ .Values.global.modulesImages.digests.sdsReplicatedVolume.drbd }}" "$MODULE_REPOSITORY" "sds-replicated-volume"
    {{- else }}
    bb-rp-from-module-image-install "drbd:{{ .Values.global.modulesImages.digests.sdsReplicatedVolume.drbd }}" "$MODULE_REGISTRY_AUTH" "$MODULE_SCHEME" "$MODULE_REGISTRY_ADDRESS" "$MODULE_REGISTRY_PATH"
    {{- end }}

    attempt=0
    until SPAAS_IP="$(host -t A "$SPAAS_FQDN" "$CLUSTER_DNS" | awk '/has address/ { print $4 }')"
    do
      if [ $attempt -gt 60 ]; then
        bb-log-info "Cluster DNS isn't accessible, can't get SPAAS service IP for DRBD building"
        exit 1
      fi

      ((attempt=attempt+1))
      bb-log-info "Waiting for cluster DNS response (try #$attempt)"
      sleep 10
    done

    bb-log-info "Cluster DNS responded, got SPAAS service IP"

    export SPAAS_URL="https://${SPAAS_IP}:2020"

    attempt=0
    until [[ "$(d8-curl -ks -w '%{http_code}' -o /dev/null $SPAAS_URL'/api/v1/hello')" == "200" ]]
    do
      if [ $attempt -gt 60 ]; then
        bb-log-info "SPAAS service isn't accessible, can't continue DRBD building"
        exit 1
      fi

      ((attempt=attempt+1))
      bb-log-info "Waiting for SPAAS service is being accessible (try #$attempt)"
      sleep 10
    done

    bb-log-info "SPAAS service is accessible, starting DRBD building"

    cd /opt/deckhouse/drbd
    make clean || true
    make
    make install
    if [ -e "/etc/modules" ]; then
      if grep -q -E '^drbd$' /etc/modules; then
        sed -i '/^drbd$/d' /etc/modules
      fi
    fi
    bb-sync-file /etc/modules-load.d/d8_drbd.conf - <<< "drbd"
    depmod
    modprobe drbd
    modprobe dm-thin-pool

    if [ -e "/proc/drbd" ]; then
      current_version="$(cat /proc/drbd | grep 'version:' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')"
      desired_version="{{ $.Values.sdsReplicatedVolume.internal.drbdVersion }}"

      {{- if or (hasPrefix "dev" .Values.global.deckhouseVersion) (hasSuffix "dev" .Values.global.deckhouseVersion) (semverCompare ">=1.63" .Values.global.deckhouseVersion) }}
      bb-package-module-install "semver:{{ .Values.global.modulesImages.digests.sdsReplicatedVolume.semver }}" "$MODULE_REPOSITORY" "sds-replicated-volume"
      {{- else }}
      bb-rp-from-module-image-install "semver:{{ .Values.global.modulesImages.digests.sdsReplicatedVolume.semver }}" "$MODULE_REGISTRY_AUTH" "$MODULE_SCHEME" "$MODULE_REGISTRY_ADDRESS" "$MODULE_REGISTRY_PATH"
      {{- end }}

      if [ "$(d8-semver compare $current_version $desired_version)" == "-1" ]; then
        bb-log-info "Non-actual version of drbd is loaded (now "$current_version", desired minimum "$desired_version"), setting reboot flag"
        bb-flag-set reboot
      fi
    fi
