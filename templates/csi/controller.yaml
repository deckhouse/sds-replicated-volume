###
### controller
###

{{- define "additional_controller_vpa" }}
- containerName: "drbd-cluster-sync"
  minAllowed:
    cpu: 10m
    memory: 50Mi
  maxAllowed:
    cpu: 20m
    memory: 100Mi
{{- end }}

{{- define "csi_controller_args" }}
- --csi-endpoint=unix://$(ADDRESS)
- --node=$(KUBE_NODE_NAME)
- --linstor-endpoint=$(LS_CONTROLLERS)
- --log-level=info
{{- end }}

{{- define "csi_controller_envs" }}
- name: ADDRESS
  value: /csi/csi.sock
- name: KUBE_NODE_NAME
  valueFrom:
    fieldRef:
      apiVersion: v1
      fieldPath: spec.nodeName
- name: LS_CONTROLLERS
  value: https://linstor.d8-sds-replicated-volume.svc:3371
- name: LS_ROOT_CA
  valueFrom:
    secretKeyRef:
      key: ca.crt
      name: linstor-client-https-cert
- name: LS_USER_CERTIFICATE
  valueFrom:
    secretKeyRef:
      key: tls.crt
      name: linstor-client-https-cert
- name: LS_USER_KEY
  valueFrom:
    secretKeyRef:
      key: tls.key
      name: linstor-client-https-cert
{{- include "helm_lib_envs_for_proxy" . }}
{{- end }}

{{- define "csi_controller_init_containers" }}
- command:
  - /linstor-wait-until
  - api-online
  securityContext:
    readOnlyRootFilesystem: true  
  env:
  - name: LS_CONTROLLERS
    value: https://linstor.d8-sds-replicated-volume.svc:3371
  - name: LS_ROOT_CA
    valueFrom:
      secretKeyRef:
        key: ca.crt
        name: linstor-client-https-cert
  - name: LS_USER_CERTIFICATE
    valueFrom:
      secretKeyRef:
        key: tls.crt
        name: linstor-client-https-cert
  - name: LS_USER_KEY
    valueFrom:
      secretKeyRef:
        key: tls.key
        name: linstor-client-https-cert
  image: {{ include "helm_lib_module_image" (list . "linstorWaitUntil") }}
  imagePullPolicy: IfNotPresent
  name: linstor-wait-api-online
{{- end }}

{{- define "csi_additional_controller_volumes" }}
{{- end }}

{{- define "csi_additional_controller_volume_mounts" }}
{{- end }}

{{- define "csi_custom_node_selector" }}
storage.deckhouse.io/sds-replicated-volume-node: ""
{{- end }}

{{- define "csi_additional_containers" }}
- command:
  - /drbd-cluster-sync
  env:
    - name: LS_CONTROLLERS
      value: https://linstor.d8-{{ .Chart.Name }}.svc:3371
    - name: LS_ROOT_CA
      valueFrom:
        secretKeyRef:
          key: ca.crt
          name: linstor-client-https-cert
    - name: LS_USER_CERTIFICATE
      valueFrom:
        secretKeyRef:
          key: tls.crt
          name: linstor-client-https-cert
    - name: LS_USER_KEY
      valueFrom:
        secretKeyRef:
          key: tls.key
          name: linstor-client-https-cert
    - name: RETRY_COUNT
      value: "2"
    - name: RETRY_DELAY_SEC
      value: "10"
    - name: NUM_WORKERS
      value: "3"
  image: {{ include "helm_lib_module_image" (list . "drbdClusterSync") }}
  imagePullPolicy: IfNotPresent
  name: drbd-cluster-sync
  resources:
    requests:
      ephemeral-storage: 50Mi
  terminationMessagePath: /dev/termination-log
  terminationMessagePolicy: File
  securityContext: {}
{{- end }}

{{- $csiControllerImage := include "helm_lib_module_image" (list . "linstorCsi") }}

{{- $csiControllerConfig := dict }}
{{- $_ := set $csiControllerConfig "controllerImage" $csiControllerImage }}
{{- $_ := set $csiControllerConfig "snapshotterEnabled" true }}
{{- $_ := set $csiControllerConfig "resizerEnabled" true }}

{{- $_ := set $csiControllerConfig "csiControllerHostNetwork" "false" }}
{{- $_ := set $csiControllerConfig "provisionerTimeout" "1200s" }}
{{- $_ := set $csiControllerConfig "snapshotterTimeout" "1200s" }}
{{- $_ := set $csiControllerConfig "extraCreateMetadataEnabled" true }}
{{- $_ := set $csiControllerConfig "livenessProbePort" 4261 }}
{{- $_ := set $csiControllerConfig "additionalControllerArgs" (include "csi_controller_args" . | fromYamlArray) }}
{{- $_ := set $csiControllerConfig "additionalControllerEnvs" (include "csi_controller_envs" . | fromYamlArray) }}
{{- $_ := set $csiControllerConfig "additionalControllerVolumes" (include "csi_additional_controller_volumes" . | fromYamlArray) }}
{{- $_ := set $csiControllerConfig "additionalControllerVolumeMounts" (include "csi_additional_controller_volume_mounts" . | fromYamlArray) }}
{{- $_ := set $csiControllerConfig "additionalControllerVPA" (include "additional_controller_vpa" . | fromYamlArray) }}
{{- $_ := set $csiControllerConfig "initContainers" (include "csi_controller_init_containers" . | fromYamlArray) }}
{{- $_ := set $csiControllerConfig "additionalContainers" (include "csi_additional_containers" . | fromYamlArray) }}

{{- include "helm_lib_csi_controller_manifests" (list . $csiControllerConfig) }}

###
### node
###

{{- define "csi_node_args" }}
- --csi-endpoint=unix://$(CSI_ENDPOINT)
- --node=$(KUBE_NODE_NAME)
- --linstor-endpoint=$(LS_CONTROLLERS)
- --log-level=info
{{- end }}

{{- define "csi_node_envs" }}
- name: CSI_ENDPOINT
  value: /csi/csi.sock
- name: DRIVER_REG_SOCK_PATH
  value: /var/lib/kubelet/plugins/replicated.csi.storage.deckhouse.io/csi.sock
- name: KUBE_NODE_NAME
  valueFrom:
    fieldRef:
      apiVersion: v1
      fieldPath: spec.nodeName
- name: LS_CONTROLLERS
  value: https://linstor.d8-sds-replicated-volume.svc:3371
- name: LS_ROOT_CA
  valueFrom:
    secretKeyRef:
      key: ca.crt
      name: linstor-client-https-cert
- name: LS_USER_CERTIFICATE
  valueFrom:
    secretKeyRef:
      key: tls.crt
      name: linstor-client-https-cert
- name: LS_USER_KEY
  valueFrom:
    secretKeyRef:
      key: tls.key
      name: linstor-client-https-cert
{{- end }}

{{- define "csi_additional_node_selector_terms" }}
{{- end }}

{{- define "csi_node_init_containers" }}
- command:
    - /linstor-wait-until
    - satellite-online
    - $(KUBE_NODE_NAME)
  securityContext:
    readOnlyRootFilesystem: true
  env:
    - name: KUBE_NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: LS_CONTROLLERS
      value: https://linstor.d8-{{ .Chart.Name }}.svc:3371
    - name: LS_ROOT_CA
      valueFrom:
        secretKeyRef:
          key: ca.crt
          name: linstor-client-https-cert
    - name: LS_USER_CERTIFICATE
      valueFrom:
        secretKeyRef:
          key: tls.crt
          name: linstor-client-https-cert
    - name: LS_USER_KEY
      valueFrom:
        secretKeyRef:
          key: tls.key
          name: linstor-client-https-cert
  image: {{ include "helm_lib_module_image" (list . "linstorWaitUntil") }}
  imagePullPolicy: IfNotPresent
  name: linstor-wait-node-online
{{- end }}


{{- define "csi_additional_node_volumes" }}
{{- end }}

{{- define "csi_additional_node_volume_mounts" }}
{{- end }}

{{- $csiNodeImage := include "helm_lib_module_image" (list . "linstorCsi") }}

{{- $csiNodeConfig := dict }}
{{- $_ := set $csiNodeConfig "nodeImage" $csiNodeImage }}
{{- $_ := set $csiNodeConfig "driverFQDN" "replicated.csi.storage.deckhouse.io" }}
{{- $_ := set $csiNodeConfig "livenessProbePort" 4262 }}
{{- $_ := set $csiNodeConfig "setSysAdminCapability" true }}
{{- $_ := set $csiNodeConfig "serviceAccount" "csi" }}
{{- $_ := set $csiNodeConfig "additionalNodeArgs" (include "csi_node_args" . | fromYamlArray) }}
{{- $_ := set $csiNodeConfig "additionalNodeEnvs" (include "csi_node_envs" . | fromYamlArray) }}
{{- $_ := set $csiNodeConfig "additionalNodeVolumes" (include "csi_additional_node_volumes" . | fromYamlArray) }}
{{- $_ := set $csiNodeConfig "additionalNodeSelectorTerms" (include "csi_additional_node_selector_terms" . | fromYamlArray) }}
{{- $_ := set $csiNodeConfig "additionalNodeVolumeMounts" (include "csi_additional_node_volume_mounts" . | fromYamlArray) }}
{{- $_ := set $csiNodeConfig "customNodeSelector" (include "csi_custom_node_selector" . | fromYaml) }}
{{- $_ := set $csiNodeConfig "forceCsiNodeAndStaticNodesDepoloy" true }}

{{- include "helm_lib_csi_node_manifests" (list . $csiNodeConfig) }}
