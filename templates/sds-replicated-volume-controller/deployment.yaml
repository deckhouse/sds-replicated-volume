{{- define "sds_drbd_controller_resources" }}
cpu: 10m
memory: 25Mi
{{- end }}

{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: sds-replicated-volume-controller
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "sds-replicated-volume-controller")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: sds-replicated-volume-controller
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: "sds-replicated-volume-controller"
      minAllowed:
        {{- include "sds_drbd_controller_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 200m
        memory: 100Mi
{{- end }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: sds-replicated-volume-controller
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "sds-replicated-volume-controller" )) | nindent 2 }}
spec:
  minAvailable: {{ include "helm_lib_is_ha_to_value" (list . 1 0) }}
  selector:
    matchLabels:
      app: sds-replicated-volume-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sds-replicated-volume-controller
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "sds-replicated-volume-controller")) | nindent 2 }}
spec:
  revisionHistoryLimit: 2
  {{- include "helm_lib_deployment_strategy_and_replicas_for_ha" . | nindent 2 }}
  selector:
    matchLabels:
      app: sds-replicated-volume-controller
  template:
    metadata:
      labels:
        app: sds-replicated-volume-controller
    spec:
      {{- include "helm_lib_priority_class" (tuple . "cluster-medium") | nindent 6 }}
      {{- include "helm_lib_node_selector" (tuple . "system") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "system") | nindent 6 }}
      {{- include "helm_lib_module_pod_security_context_run_as_user_nobody" . | nindent 6 }}
      {{- include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "sds-replicated-volume-controller")) | nindent 6 }}
{{- if (include "helm_lib_ha_enabled" .) }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - sds-replicated-volume-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
{{- end }}
      imagePullSecrets:
        - name: {{ .Chart.Name }}-module-registry
      serviceAccountName: sds-replicated-volume-controller
      containers:
        - name: sds-replicated-volume-controller
          image: {{ include "helm_lib_module_image" (list . "sdsReplicatedVolumeController") }}
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            failureThreshold: 2
            periodSeconds: 1
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            periodSeconds: 1
            failureThreshold: 3
          resources:
            requests:
              {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 14 }}
{{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
              {{- include "sds_drbd_controller_resources" . | nindent 14 }}
{{- end }}
          securityContext:
            privileged: true
            seLinuxOptions:
              level: s0
              type: spc_t
          env:
            - name: LOG_LEVEL
{{- if eq .Values.sdsReplicatedVolume.logLevel "ERROR" }}
              value: "0"
{{- else if eq .Values.sdsReplicatedVolume.logLevel "WARN" }}
              value: "1"
{{- else if eq .Values.sdsReplicatedVolume.logLevel "INFO" }}
              value: "2"
{{- else if eq .Values.sdsReplicatedVolume.logLevel "DEBUG" }}
              value: "3"
{{- else if eq .Values.sdsReplicatedVolume.logLevel "TRACE" }}
              value: "4"
{{- end }}
            - name: LS_USER_CERTIFICATE
              valueFrom:
                secretKeyRef:
                  name: linstor-client-https-cert
                  key: tls.crt
            - name: LS_USER_KEY
              valueFrom:
                secretKeyRef:
                  name: linstor-client-https-cert
                  key: tls.key
            - name: LS_ROOT_CA
              valueFrom:
                secretKeyRef:
                  name: linstor-client-https-cert
                  key: ca.crt
            - name: LS_CONTROLLERS
              value: https://linstor.d8-{{ .Chart.Name }}.svc:3371
            - name: CONTROLLER_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: host-device-dir
              mountPath: /dev/
            - name: host-sys-dir
              mountPath: /sys/
            - name: host-root
              mountPath: /host-root/
              mountPropagation: HostToContainer
      volumes:
        - name: host-device-dir
          hostPath:
            path: /dev
            type: ""
        - name: host-sys-dir
          hostPath:
            path: /sys/
            type: Directory
        - name: host-root
          hostPath:
            path: /
