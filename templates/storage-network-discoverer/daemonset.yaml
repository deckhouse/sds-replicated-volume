{{- define "storage_network_discoverer_resources" }}
cpu: 50m
memory: 25Mi
{{- end }}

{{- if .Values.sdsReplicatedVolume.storageNetworkCIDRs }}

{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: storage-network-discoverer
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "storage-network-discoverer" "workload-resource-policy.deckhouse.io" "every-node")) | nindent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: DaemonSet
    name: storage-network-discoverer
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: discoverer
      minAllowed:
        {{- include "storage_network_discoverer_resources" . | nindent 8 }}
      maxAllowed:
        cpu: 200m
        memory: 512Mi
{{- end }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: storage-network-discoverer
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "storage-network-discoverer")) | nindent 2 }}
spec:
  selector:
    matchLabels:
      app: storage-network-discoverer
  template:
    metadata:
      name: storage-network-discoverer
      namespace: d8-{{ .Chart.Name }}
      labels:
        app: storage-network-discoverer
      annotations:
        kubectl.kubernetes.io/default-container: discoverer
    spec:
      {{- include "helm_lib_priority_class" (tuple . "cluster-medium") | nindent 6 }}
      {{- include "helm_lib_tolerations" (tuple . "any-node" "storage-problems") | nindent 6 }}
      {{- /* include "helm_lib_module_pod_security_context_run_as_user_root" . | nindent 6 */}}
      nodeSelector:
        storage.deckhouse.io/sds-replicated-volume-node: ""
      imagePullSecrets:
        - name: {{ .Chart.Name }}-module-registry
      affinity: {}
      serviceAccount: storage-network-discoverer
      serviceAccountName: storage-network-discoverer
      hostNetwork: true
      containers:
      - name: discoverer
        image: {{ include "helm_lib_module_image" (list . "storageNetworkDiscoverer") }}
        imagePullPolicy: IfNotPresent
        args:
          {{- range $cidr := .Values.sdsReplicatedVolume.storageNetworkCIDRs }}
          - --storage-network-cidr
          - {{ $cidr | quote }}
          {{- end }}
        env:
          - name: LOG_LEVEL
{{- if eq .Values.sdsReplicatedVolume.logLevel "ERROR" }}
            value: "0"
{{- else if eq .Values.sdsReplicatedVolume.logLevel "WARN" }}
            value: "1"
{{- else if eq .Values.sdsReplicatedVolume.logLevel "INFO" }}
            value: "2"
{{- else if eq .Values.sdsReplicatedVolume.logLevel "DEBUG" }}
            value: "3"
{{- else if eq .Values.sdsReplicatedVolume.logLevel "TRACE" }}
            value: "4"
{{- end }}
          # try discover storage IPs on each node every 30s
          - name: DISCOVERY_INTERVAL_SEC
            value: "30"
          # If founded, storage IP will be set to node's status and cached for CACHE_TTL_SEC
          # Discoverer DO NOT attempt to update node before this cache will expired
          # So, do not set this value too high. (2 * DISCOVERY_INTERVAL_SEC) should be enough.
          - name: CACHE_TTL_SEC
            value: "60"
          # NODE_NAME REQUIRED by discoverer
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        resources:
          requests:
            {{- include "helm_lib_module_ephemeral_storage_only_logs" . | nindent 12 }}
{{- if not ( .Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
            {{- include "storage_network_discoverer_resources" . | nindent 12 }}
{{- end }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 100%
    type: RollingUpdate

{{- end }}
