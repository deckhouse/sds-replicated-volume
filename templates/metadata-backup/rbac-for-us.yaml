---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metadata-backup
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "metadata-backup")) | nindent 2 }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: metadata-backup
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "metadata-backup")) | nindent 2 }}
rules:
  # For k8s secrets
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - create
      - patch
      - update
      - delete
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: metadata-backup
  namespace: d8-{{ .Chart.Name }}
  {{- include "helm_lib_module_labels" (list . (dict "app" "metadata-backup")) | nindent 2 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: metadata-backup
subjects:
  - kind: ServiceAccount
    name: metadata-backup
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: d8:{{ .Chart.Name }}:metadata-backup
  {{- include "helm_lib_module_labels" (list . (dict "app" "metadata-backup")) | nindent 2 }}
rules:
  # LINSTOR manages its own CRDs, so we have to allow it to modify those
  - verbs:
      - get
      - list
      - create
      - delete
      - update
      - patch
      - watch
    apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
  - apiGroups:
      - internal.linstor.linbit.com
    resources:
      # All these resources are dedicated just to the controller, so allow any
      - "*"
    verbs:
      - get
      - list
  - apiGroups:
      - storage.deckhouse.io
    resources:
      - replicatedstoragemetadatabackups
    verbs:
      - get
      - list
      - create
      - delete
      - watch
      - update
      - patch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: d8:{{ .Chart.Name }}:metadata-backup
  {{- include "helm_lib_module_labels" (list . (dict "app" "metadata-backup")) | nindent 2 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: d8:{{ .Chart.Name }}:metadata-backup
subjects:
  - kind: ServiceAccount
    name: metadata-backup
    namespace: d8-{{ .Chart.Name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: d8:{{ .Chart.Name }}:metadata-backup-rbac-proxy
  {{- include "helm_lib_module_labels" (list . (dict "app" "metadata-backup")) | nindent 2 }}
subjects:
  - kind: ServiceAccount
    name: metadata-backup
    namespace: d8-{{ .Chart.Name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: d8:rbac-proxy
